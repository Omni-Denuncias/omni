// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpgApi.Data;

namespace omni.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221015071808_AdicionandoClasses")]
    partial class AdicionandoClasses
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("omni.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 247, 239, 39, 253, 144, 223, 55, 241, 199, 139, 103, 45, 126, 147, 93, 184, 91, 225, 36, 16, 37, 5, 21, 63, 124, 198, 123, 20, 229, 216, 97, 129, 33, 236, 255, 111, 144, 142, 191, 0, 48, 31, 224, 191, 228, 75, 110, 79, 89, 44, 252, 20, 247, 4, 52, 215, 28, 235, 44, 236, 31, 217, 28, 163 },
                            PasswordSalt = new byte[] { 122, 91, 183, 101, 86, 182, 153, 128, 217, 212, 141, 130, 65, 241, 206, 106, 94, 202, 108, 45, 128, 130, 214, 225, 77, 197, 241, 64, 187, 47, 75, 165, 0, 228, 205, 92, 5, 161, 166, 45, 25, 99, 193, 88, 98, 210, 97, 237, 197, 215, 26, 113, 165, 129, 107, 163, 11, 108, 36, 144, 251, 119, 179, 225, 65, 167, 233, 190, 92, 218, 112, 120, 13, 196, 19, 110, 137, 246, 79, 251, 201, 40, 156, 85, 223, 51, 77, 129, 96, 239, 151, 250, 205, 247, 155, 85, 194, 108, 234, 138, 190, 95, 173, 108, 37, 206, 236, 213, 188, 181, 227, 192, 23, 229, 13, 236, 60, 204, 242, 97, 58, 244, 198, 111, 14, 254, 67, 3 },
                            Username = "UsuarioAdmin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
