using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace omni.Migrations
{
    public partial class Tudofff : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddUniqueConstraint(
                name: "AK_Denuncias_IdCidadao",
                table: "Denuncias",
                column: "IdCidadao");

            migrationBuilder.UpdateData(
                table: "Usuarios",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 102, 192, 119, 176, 27, 137, 242, 153, 173, 167, 99, 220, 247, 55, 93, 85, 133, 99, 127, 63, 219, 107, 105, 173, 190, 47, 65, 77, 150, 152, 193, 229, 191, 93, 11, 204, 71, 168, 32, 184, 176, 32, 123, 185, 79, 109, 165, 157, 118, 106, 47, 99, 134, 165, 97, 119, 134, 6, 207, 2, 74, 115, 147, 186 }, new byte[] { 36, 26, 222, 128, 126, 231, 6, 105, 65, 157, 193, 216, 253, 11, 37, 29, 163, 110, 159, 161, 149, 139, 100, 176, 127, 148, 92, 165, 152, 9, 100, 104, 189, 62, 102, 223, 146, 193, 96, 7, 129, 58, 3, 103, 148, 88, 136, 244, 88, 13, 142, 60, 157, 13, 2, 134, 175, 122, 135, 198, 114, 196, 161, 84, 189, 102, 147, 205, 22, 135, 67, 140, 100, 142, 137, 221, 111, 230, 138, 102, 104, 69, 88, 174, 191, 204, 49, 217, 96, 90, 5, 76, 158, 132, 230, 251, 76, 49, 81, 93, 73, 32, 20, 85, 247, 127, 191, 140, 30, 78, 203, 53, 7, 2, 195, 141, 159, 53, 31, 124, 66, 6, 30, 153, 31, 220, 186, 148 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropUniqueConstraint(
                name: "AK_Denuncias_IdCidadao",
                table: "Denuncias");

            migrationBuilder.UpdateData(
                table: "Usuarios",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 78, 178, 19, 141, 139, 149, 186, 148, 86, 136, 132, 30, 223, 225, 112, 56, 84, 13, 13, 239, 225, 151, 96, 85, 120, 74, 219, 170, 10, 179, 3, 106, 104, 190, 216, 254, 141, 175, 143, 202, 251, 139, 203, 225, 135, 188, 146, 80, 116, 172, 200, 240, 206, 108, 32, 104, 199, 173, 89, 56, 112, 108, 54, 184 }, new byte[] { 210, 162, 69, 137, 89, 96, 13, 110, 161, 119, 59, 37, 37, 131, 16, 86, 74, 37, 58, 243, 31, 79, 244, 151, 181, 163, 7, 78, 94, 245, 213, 182, 15, 142, 104, 125, 67, 151, 198, 78, 51, 176, 96, 208, 210, 170, 132, 225, 176, 122, 47, 109, 202, 41, 49, 209, 25, 177, 201, 181, 67, 191, 7, 203, 15, 82, 137, 208, 212, 2, 60, 15, 90, 93, 55, 112, 170, 188, 27, 8, 242, 74, 238, 142, 25, 253, 124, 145, 160, 87, 191, 192, 38, 146, 208, 16, 243, 235, 76, 169, 206, 125, 53, 110, 85, 62, 6, 238, 25, 253, 187, 122, 14, 111, 187, 22, 26, 20, 2, 167, 145, 24, 36, 224, 224, 3, 120, 214 } });
        }
    }
}
