// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpgApi.Data;

namespace omni.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221015070944_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("omni.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 8, 18, 109, 187, 42, 106, 142, 251, 110, 107, 218, 250, 121, 73, 137, 35, 198, 193, 44, 188, 206, 240, 14, 198, 96, 1, 234, 96, 195, 9, 230, 193, 171, 86, 215, 208, 208, 15, 131, 125, 138, 218, 208, 189, 68, 114, 243, 251, 72, 151, 161, 155, 13, 130, 201, 108, 61, 116, 59, 233, 201, 71, 112, 177 },
                            PasswordSalt = new byte[] { 157, 202, 207, 101, 64, 63, 10, 161, 150, 63, 87, 161, 148, 83, 46, 128, 214, 212, 255, 178, 36, 185, 146, 147, 152, 22, 121, 112, 220, 43, 21, 183, 243, 92, 48, 161, 3, 221, 252, 178, 112, 1, 33, 47, 20, 235, 98, 207, 243, 222, 12, 233, 73, 192, 123, 165, 14, 250, 24, 50, 159, 189, 244, 11, 157, 74, 213, 58, 239, 59, 134, 212, 249, 174, 164, 61, 36, 186, 154, 3, 45, 115, 50, 211, 73, 89, 239, 196, 231, 168, 238, 47, 227, 213, 213, 230, 247, 59, 131, 79, 36, 233, 71, 238, 229, 3, 141, 206, 238, 122, 0, 206, 245, 158, 99, 198, 7, 49, 38, 218, 151, 90, 238, 116, 0, 91, 174, 69 },
                            Username = "UsuarioAdmin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
